{"version":3,"sources":["user-table/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","useRowStyles","root","borderBottom","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","fontWeight","fontSize","body","TableCell","UserTable","useState","data","setData","open","setOpen","React","page","setPage","rowsPerPage","setRowsPerPage","useEffect","a","axios","result","map","person","fullAddress","address","suite","street","city","zipcode","fetchData","sortArrayObjAscendingByField","field","newData","slice","sort","b","sortArrayObjDescendingByField","classes","rowClasses","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","pageNumber","onChangeRowsPerPage","console","log","Number","target","value","TableContainer","Paper","Table","className","aria-label","TableHead","TableRow","onClick","TableBody","row","Fragment","scope","name","username","email","phone","website","company","Button","id","variant","size","style","filter","deleteRow","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","geo","lat","lng","catchPhrase","bs","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.027b53ee.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport \"./index.css\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#1565c0',\n    color: theme.palette.common.white,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nexport function UserTable() {\n  const [data, setData] = useState([]);\n  const [open, setOpen] = useState(-1);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios(\n        'https://jsonplaceholder.typicode.com/users',\n      );\n      result.data.map((person) => {\n        return person.fullAddress = `${person.address.suite}, ${person.address.street}, ${person.address.city} -  ${person.address.zipcode}`;\n      });\n      setData(result.data);\n    }\n    fetchData();\n  }, []);\n\n  const deleteRow = (id) => {\n    let newData = data.filter((person) => {\n      return person.id !== id;\n    });\n    setData(newData);\n  };\n\n  const sortArrayObjAscendingByField = (field) => {\n    let newData = data.slice().sort((a,b) => {\n      return (a[field] > b[field]) ? 1 : ((b[field] > a[field]) ? -1 : 0);\n    });\n    setData(newData);\n  };\n\n  const sortArrayObjDescendingByField = (field) => {\n    let newData = data.slice().sort((a,b) => {\n      return (a[field] < b[field]) ? 1 : ((b[field] < a[field]) ? -1 : 0);\n    });\n    setData(newData);\n  };\n\n  const handleChangePage= (event, pageNumber) => {\n    setPage(pageNumber);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    console.log(event);\n    setRowsPerPage(Number(event.target.value));\n    setPage(0);\n  };\n\n  const classes = useStyles();\n  const rowClasses = useRowStyles();\n\n  return(\n    <>\n      <TablePagination\n        rowsPerPageOptions={[3, 6, 10]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>\n                <div className=\"name-sort-img-container\">\n                  Name\n                  <div className=\"img-container\">\n                    <KeyboardArrowUp\n                      className=\"arrow-img\"\n                      onClick={() => sortArrayObjAscendingByField('name')}\n                    />\n                    <KeyboardArrowDown\n                      className=\"arrow-img\"\n                      onClick={() => sortArrayObjDescendingByField('name')}\n                    />\n                  </div>\n                </div>\n              </StyledTableCell>\n\n              <StyledTableCell>\n                Username\n              </StyledTableCell>\n\n              <StyledTableCell>\n                <div className=\"name-sort-img-container\">\n                  Email\n                  <div className=\"img-container\">\n                    <KeyboardArrowUp\n                      className=\"arrow-img\"\n                      onClick={() => sortArrayObjAscendingByField('email')}\n                    />\n                    <KeyboardArrowDown\n                      className=\"arrow-img\"\n                      onClick={() => sortArrayObjDescendingByField('email')}\n                    />\n                  </div>\n                </div>\n              </StyledTableCell>\n\n              <StyledTableCell>\n                Address\n              </StyledTableCell>\n\n              <StyledTableCell>\n                Phone\n              </StyledTableCell>\n\n              <StyledTableCell>\n                Website\n              </StyledTableCell>\n\n              <StyledTableCell>\n                Company\n              </StyledTableCell>\n\n              <StyledTableCell>\n                Actions\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {\n              data\n                .slice(page * rowsPerPage,  page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <React.Fragment key={row.id}>\n                    <TableRow className={rowClasses.root}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                      </TableCell>\n\n                      <TableCell>\n                        {row.username}\n                      </TableCell>\n\n                      <TableCell>\n                        {row.email}\n                      </TableCell>\n\n                      <TableCell>\n                        {row.fullAddress}\n                      </TableCell>\n\n                      <TableCell>\n                        {row.phone}\n                      </TableCell>\n\n                      <TableCell>\n                        {row.website}\n                      </TableCell>\n\n                      <TableCell>\n                        {row.company.name}\n                      </TableCell>\n\n                      <TableCell>\n                        <Button\n                          onClick={() => setOpen(open === row.id ? -1 : row.id)}\n                          variant=\"outlined\"\n                          size=\"small\"\n                          style={\n                            {\n                              'borderColor': '#1b5e20',\n                              'color': '#1b5e20',\n                              'margin': '10px'\n                            }\n                          }\n                        >\n                          Open\n                        </Button>\n                        <Button\n                          onClick={() => deleteRow(row.id)}\n                          variant=\"outlined\"\n                          size=\"small\"\n                          style={\n                            {\n                              'borderColor': '#c63533',\n                              'color': '#c63533',\n                              'margin': '10px'\n                            }\n                          }\n                        >\n                          Delete\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell style={{ paddingBottom: 0, paddingTop: 0}} colSpan={8}>\n                        <Collapse\n                          in={open === row.id}\n                          timeout=\"auto\"\n                          unmountOnExit\n                        >\n                          <h3>\n                            More Details:\n                          </h3>\n\n                          <p>\n                        <span className=\"bold-text\">\n                          Address Map Coordinates:\n                        </span> {row.address.geo.lat}, {row.address.geo.lng}\n                          </p>\n\n                          <p>\n                        <span className=\"bold-text\">\n                          Company Catchphrase\n                        </span> : {row.company.catchPhrase}\n                          </p>\n\n                          <p>\n                        <span className=\"bold-text\">\n                          Company business area\n                        </span> : {row.company.bs}\n                          </p>\n                        </Collapse>\n                      </TableCell>\n                    </TableRow>\n                  </React.Fragment>\n                )\n              )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  )\n}\n","import React from \"react\";\nimport './App.css';\nimport {UserTable} from \"./user-table\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserTable/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}